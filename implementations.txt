🗂️ Suggested Categorization
    ✅ Core Logic
        -Basic loan calculation (done)
        -Monthly payment calculation (done)
        -Total repayment amount (done)
        -Compound interest logic (done)
        -Input validation (done)
        -Amortization schedule (done)
        -Early repayment logic (done)

        -Debt-to-income ratio check (pending)
        -Configurable interest type (pending)
        -Mid period repayment functionality(pending)
        -Summary object {totalInterestSaved,earlyRepaymentPeriod,finalPayment,modifiedSchedule} (pending)

    🎯 Smart Features
        -Interest rate suggestions (pending)
        -Loan comparison tool (pending)


    🧠 Educational Layer
        -Educational tooltips (pending)

    🌍 User Experience
        -Localization (desired)
        -Visual charts (interesting) Use libraries like Chart.js or D3.js
        -Visual chart (principal payment vs interest payment percentage fluctuation in total paymen along the different periods)
        -User should be able to adjust the interest rate
        -User should be able to adjust the interest type
        -User should be able to see real-time updates to: monthly payments
        -User should be able to see real-time updates to: total repayment
        -User should be able to see real-time updates to: amortization schedule
        -User should be able to see real-time updates to: interest cost
        -Add date tracking (optional) that would be interesting to add later with frontend! (pending)
        -Let users simulate different early repayment periods and compare savings
        -Interest vs principal over time
        -Let the user do:Comparison: full term vs early repayment
        -
        -
        -
        -
        -



🗂️ Suggested Next Steps (Prioritized)
Let’s break it down into manageable chunks:

🔹 Phase 1: Finalize Core Module
[ ] Add summary object to early repayment logic

[ ] Validate full vs early repayment totals

[ ] Write unit tests for edge cases

🔹 Phase 2: Comparison & Simulation
[ ] Implement compareLoans() function

[ ] Add simulateEarlyRepayments() for multiple periods

[ ] Prepare data structure for frontend charts

🔹 Phase 3: Frontend Prep
[ ] Sketch UI components (loan form, chart, results table)

[ ] Decide on chart library (Chart.js, D3.js, etc.)

[ ] Plan localization (currency, date formats)


🔤  Glossary:
    -ratePerPeriod: Interest rate applied each compounding period
    -totalAmount: Final amount the user repays (principal + interest)
    -interestAccrued: Total interest paid over the loan term
    -Lump Sum: single large payment made at once.


