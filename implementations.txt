🗂️ Suggested Categorization
    ✅ Core Logic
        -Basic loan calculation (done)
        -Monthly payment calculation (done)
        -Total repayment amount (done)
        -Compound interest logic (done)
        -Input validation (done)
        -Amortization schedule (done)
        -Early repayment logic (done)


        -Debt-to-income ratio check (pending)
        -Configurable interest type (pending)
        -Mid period repayment functionality(pending)
        -Summary object {totalInterestSaved,earlyRepaymentPeriod,finalPayment,modifiedSchedule} (pending)
        -loan scenario object:const scenario = {name: "Standard 15-Year Fixed",loan: { principal: 100000, rate: 0.05, term: 15 },user: { salary: 60000, ratio: 0.2 },earlyRepaymentPeriod: 60};(pending)


    🎯 Smart Features
        -Interest rate suggestions (pending)
        -Loan comparison tool (pending)


    🧠 Educational Layer
        -Educational tooltips (pending)

    🌍 User Experience
        -Localization (desired)
        -Visual charts (interesting) Use libraries like Chart.js or D3.js
        -Visual chart (principal payment vs interest payment percentage fluctuation in total paymen along the different periods)
        -User should be able to adjust the interest rate
        -User should be able to adjust the interest type
        -User should be able to see real-time updates to: monthly payments
        -User should be able to see real-time updates to: total repayment
        -User should be able to see real-time updates to: amortization schedule
        -User should be able to see real-time updates to: interest cost
        -Add date tracking (optional) that would be interesting to add later with frontend! (pending)
        -Let users simulate different early repayment periods and compare savings
        -Interest vs principal over time
        -Let the user do:Comparison: full term vs early repayment
        -
        -
        -
        -
        -



# 🗂️ Loan Simulator Roadmap Checklist

## 🔹 Phase 1: Finalize Core Module
- [ ] **Add summary object to early repayment logic**
  - [ ] Include total interest saved
  - [ ] Include adjusted loan duration
- [ ] **Validate full vs early repayment totals**
  - [ ] Compare principal + interest across scenarios
  - [ ] Ensure consistency with amortization schedule
- [ ] **Write unit tests for edge cases**
  - [ ] Zero interest rate
  - [ ] Very short loan duration
  - [ ] Early repayment at final period

## 🔹 Phase 2: Comparison & Simulation
- [ ] **Implement `compareLoans()` function**
  - [ ] Accept multiple loan configs
  - [ ] Return ranked summary by cost, duration, flexibility
- [ ] **Add `simulateEarlyRepayments()` for multiple periods**
  - [ ] Support custom repayment schedules
  - [ ] Visualize impact over time
- [ ] **Prepare data structure for frontend charts**
  - [ ] Monthly breakdowns
  - [ ] Cumulative totals
  - [ ] Interest vs principal split

## 🔹 Phase 3: Frontend Prep
- [ ] **Sketch UI components**
  - [ ] Loan input form
  - [ ] Results table
  - [ ] Interactive chart
- [ ] **Decide on chart library**
  - [ ] Chart.js (simple, responsive)
  - [ ] D3.js (custom, powerful)
- [ ] **Plan localization**
  - [ ] Currency formatting
  - [ ] Language support
  - [ ] Regional loan norms

---

## 🧠 Notes
- Keep logic pure and config-driven
- Avoid premature optimization — build for clarity first
- Modularize functions for reuse in future products


🔤  Glossary:
    -ratePerPeriod: Interest rate applied each compounding period
    -totalAmount: Final amount the user repays (principal + interest)
    -interestAccrued: Total interest paid over the loan term
    -Lump Sum: single large payment made at once.


