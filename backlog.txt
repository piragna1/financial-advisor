COURSE TASKS:
  -GITHUB REPOSITORY (
    +Table of contents
      *Overview (done)
      *Description (done)
      *ERD (erd done, add it to the github REPOSITORY's content)
  )
  -Implement authentication in your application.
    Assignment: Choose and implement one of the authentication methods we covered in class:
      JWT (JSON Web Tokens)
      OAuth 2.0
    Important: You must implement the authentication logic from scratch without using ready-made 
    authentication libraries. This will help you understand how these protocols 
    work under the hood. (login process pending)


üóÇÔ∏è Suggested Categorization
    ‚úÖ Core Logic
        -Basic loan calculation (done)
        -Monthly payment calculation (done)
        -Total repayment amount (done)
        -Compound interest logic (done)
        -Amortization schedule (done)
        -Early repayment logic (done)

        -Input validation (check)


Current doing task: login auth process







-----------------------------------------------------------------------------------------------------------Non core
    üéØ Smart Features
        -Interest rate suggestions (pending)
        -Loan comparison tool (pending)


    üß† Educational Layer
        -Educational tooltips (pending)

    üåç User Experience
        -Localization (desired)
        -Visual charts (interesting) Use libraries like Chart.js or D3.js
        -Visual chart (principal payment vs interest payment percentage fluctuation in total paymen along the different periods)
        -User should be able to adjust the interest rate
        -User should be able to adjust the interest type
        -User should be able to see real-time updates to: monthly payments
        -User should be able to see real-time updates to: total repayment
        -User should be able to see real-time updates to: amortization schedule
        -User should be able to see real-time updates to: interest cost
        -Add date tracking (optional) that would be interesting to add later with frontend! (pending)
        -Let users simulate different early repayment periods and compare savings
        -Interest vs principal over time
        -Let the user do:Comparison: full term vs early repayment
        -
        -
        -
        -
        -
---

## üß† Notes
- Keep logic pure and config-driven
- Avoid premature optimization ‚Äî build for clarity first
- Modularize functions for reuse in future products


üî§  Glossary:
    -ratePerPeriod: Interest rate applied each compounding period
    -totalAmount: Final amount the user repays (principal + interest)
    -interestAccrued: Total interest paid over the loan term
    -Lump Sum: single large payment made at once.


