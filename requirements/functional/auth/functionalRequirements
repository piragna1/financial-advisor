Auth:
    User:
        Registering process:
        -The user should be able to enter their name into a text input field.
        -The user should be able to enter their email address into a text input field.
        -The user should be able to enter their password into a secure password input field.
        -The user should be able to enter their password confirmation into a separate secure input field.
        -The user should be able to submit the form containing these credentials.
        -The user should receive immediate feedback if any field is invalid or missing.

        Logging in process:
        -The user should be able to enter their email address into a text input field.
        -The user should be able to enter their password into a secure password input field.
        -The user should be able to submit the form containing these credentials.
        -The user should receive immediate feedback if the credentials are invalid or missing.
        -The user should receive a token upon successful login.
        -The user should be informed if the account does not exist or the password is incorrect.

    System:
        Registering process:
        -The system should validate the 'name' field.
            +The system should ensure the 'name' field is not empty.
            +The system should ensure the 'name' field meets a minimum length requirement (e.g. at least 2 characters).
            +The system should ensure the 'name' field does not exceed a maximum length (e.g. 50 characters).
            +The system should ensure the 'name' field contains only valid characters (e.g. letters, spaces, hyphens).
            +The system should trim leading and trailing whitespace from the 'name' field.
            +The system should reject the 'name' field if it contains disallowed symbols or numbers.
        -The system should validate the 'email' field.
            +The system should ensure the 'email' field is not empty.
            +The system should ensure the 'email' field matches a valid email format.
            +The system should ensure the 'email' field does not exceed a maximum length (e.g. 100 characters).
            +The system should trim leading and trailing whitespace from the 'email' field.
            +The system should reject the 'email' field if it contains disallowed characters or multiple @ symbols.
            +The system should check whether the 'email' field already exists in the database.
            +The system should reject the 'email' field if it is already registered.
        -The system should validate the 'password' field.
            +The system should ensure the 'password' field is not empty.
            +The system should ensure the 'password' field meets a minimum length requirement (e.g. at least 8 characters).
            +The system should ensure the 'password' field includes at least one uppercase letter.
            +The system should ensure the 'password' field includes at least one lowercase letter.
            +The system should ensure the 'password' field includes at least one numeric digit.
            +The system should ensure the 'password' field includes at least one special character (e.g. !@#$%^&*).
            +The system should reject the 'password' field if it contains whitespace characters.
            +The system should trim leading and trailing whitespace from the 'password' field.
        -The system should validate the 'confirmPassword' field.
            +The system should ensure the 'confirmPassword' field is not empty.
            +The system should ensure the 'confirmPassword' field matches the 'password' field exactly.
            +The system should trim leading and trailing whitespace from the 'confirmPassword' field.
            +The system should reject the 'confirmPassword' field if it does not match the 'password' field.

        Logging in process:
        -The system should validate the 'email' field.
            +The system should ensure the 'email' field is not empty.
            +The system should ensure the 'email' field matches a valid email format.
            +The system should trim leading and trailing whitespace from the 'email' field.
            +The system should reject the 'email' field if it contains disallowed characters or multiple @ symbols.
            +The system should check whether the 'email' field exists in the database.
            +The system should reject the login attempt if the email is not registered.
        -The system should validate the 'password' field.
            +The system should ensure the 'password' field is not empty.
            +The system should trim leading and trailing whitespace from the 'password' field.
            +The system should compare the provided password with the stored hashed password.
            +The system should reject the login attempt if the password does not match.
        -The system should issue a token upon successful authentication.
            +The system should generate a simulated JWT token containing user identification data.
            +The system should return the token to the client in the response body.
